initdb -D "D:/pri"
initdb -D "D:/sec"


pg_ctl -D D:\pri -o "-p 5433" -l d:\pri\logfile start


>psql -p 5433 -d postgres -c "CREATE ROLE replicator with REPLICATION LOGIN PASSWORD 'repl_pass';"

pg_basebackup -D d:\sec -Fp -Xs -P -R -h 127.0.0.1 -U replicator -p 5433

pg_ctl -D D:\sec -o "-p 5435" -l d:\sec\logfile start

psql -p 5433 -U postgres -

(In another cmd)

psql -p 5435 -U postgres

--------------------------------------
5433 - 
select * from pg_stat_replication;
5435
select pg_is_in_recovery();
-------------------------------------
Create table in primary

Check in secondary
---------------------------------------------------------------------------



GPT:
‚úÖ 1. Initialize the Primary Server
initdb -D "C:\pri"
‚úÖ 2. Initialize the Standby Directory (not yet running, just prep)
initdb -D "C:\sec"
‚úÖ 3. Start the Primary Server
pg_ctl -D "C:\pri" -o "-p 5433" -l "C:\pri\logfile" start
‚úÖ 4. Create Replication Role on Primary
psql -p 5433 -d postgres -c "CREATE ROLE replicator WITH REPLICATION LOGIN PASSWORD 'repl_pass';"
‚úÖ 6. Take a Base Backup for Standby
pg_basebackup -D "C:\sec" -Fp -Xs -P -R -h 127.0.0.1 -U replicator -p 5433
‚úÖ 7. Start the Standby Server
pg_ctl -D "C:\sec" -o "-p 5435" -l "C:\sec\logfile" start
üîç Verification Commands
psql -p 5433 -U kaviraja -d postgres == postgres=#
psql -p 5435 -U kaviraja -d postgres == postgres=#

On Primary (Port 5433):
SELECT * FROM pg_stat_replication;
On Standby (Port 5435):
SELECT pg_is_in_recovery();
üß™ Test: Create Table on Primary, Check on Standby
On primary:
CREATE TABLE testrep (id INT);
INSERT INTO testrep VALUES (1), (2);
On standby:
SELECT * FROM testrep;
